{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww12300\viewh14200\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs28 \cf0 binder:\
\

\b struct server
\b0  contains socket , port, and id of the server, which is the information the server provides to the binder. We chose the container for registered servers to be a std::set. Servers that are registered are added to the set. Set is a good choice for us, since the order that the servers have been added do not matter.\
\

\b struct FunctionSignatureAndServer
\b0  is a contains the function signature and the server the corresponding function is located on. We kept track of functions and the server they refer to by having a vector of FunctionSignatureAndServer, since vectors are easy to use and we can iterate through them\
\
There is an iterator for the past called function on any server. The iterator is moved to the function when it gets called, such that the next time an RPC call to a function happens, the iterator starts from that function and attempts to find the new function. This way a simple 
\b round-robin
\b0  is implemented for RPC call to functions on servers.\
\
If the binder receives a function with the same name and arguments (ignoring argument length) as another function on the same server, the binder ignores the new function and a warning code is returned in the response message. Otherwise, the binder registers the new method, even if the name of the new method is the name of another method on the server it is located. This is how 
\b function-overloading
\b0  is implemented.\
\
When the binder receives a 
\b TERMINATE
\b0  message, it sends a message to all servers with a TERMINATE type and it turns it\'92s terminate flag from false to true. The binder remains active until all servers terminate (which the binder detects through the select loop). When all servers terminate, the binder terminates.}